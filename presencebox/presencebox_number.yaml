- platform: template
  name: 0m~3m sense #mth1 is 0~2.8m Sensitivity.
  id: LD1125H_mth1
  icon: "mdi:cogs"
  optimistic: true
  restore_value: true #If you don't want to store the setting at ESP, set it to false.
  initial_value: "60.0" #Default mth1 Setting
  min_value: 10.0
  max_value: 600.0
  step: 5.0
  set_action:
    then:
      - uart.write:
          id: LD1125H_UART_BUS
          data: !lambda |-
            std::string th1st = "mth1=" + str_sprintf("%.0f",x) +"\r\n";
            return std::vector<uint8_t>(th1st.begin(), th1st.end());

- platform: template
  name: 3m~8m sense #mth2 is 2.8~8m Sensitivity.
  id: LD1125H_mth2
  icon: "mdi:cogs"
  optimistic: true
  restore_value: true #If you don't want to store the setting at ESP, set it to false.
  initial_value: "30" #Default mth2 Setting
  min_value: 5
  max_value: 300
  step: 5
  set_action:
    then:
      - uart.write:
          id: LD1125H_UART_BUS
          data: !lambda |-
            std::string th2st = "mth2=" + str_sprintf("%.0f",x) +"\r\n";
            return std::vector<uint8_t>(th2st.begin(), th2st.end());

- platform: template
  name: 8m+ sense #mth3 is above 8m Sensitivity.
  id: LD1125H_mth3
  icon: "mdi:cogs"
  optimistic: true
  restore_value: true #If you don't want to store the setting at ESP, set it to false.
  initial_value: "20" #Default mth3 Setting
  min_value: 5
  max_value: 200
  step: 5
  set_action:
    then:
      - uart.write:
          id: LD1125H_UART_BUS
          data: !lambda |-
            std::string th3st = "mth3=" + str_sprintf("%.0f",x) +"\r\n";
            return std::vector<uint8_t>(th3st.begin(), th3st.end());

- platform: template
  name: Max Distance #rmax is max detection distance.
  id: LD1125H_rmax
  icon: "mdi:signal-distance-variant"
  optimistic: true
  restore_value: true #If you don't want to store the setting at ESP, set it to false.
  initial_value: "8" #Default rmax Setting
  min_value: 0.4
  max_value: 12
  step: 0.1
  set_action:
    then:
      - uart.write:
          id: LD1125H_UART_BUS
          data: !lambda |-
            std::string rmaxst = "rmax=" + str_sprintf("%.1f",x) +"\r\n";
            return std::vector<uint8_t>(rmaxst.begin(), rmaxst.end());

- platform: template
  name: Clearance (s)
  id: LD1125H_Clear_Time
  icon: "mdi:account-off"
  optimistic: true
  restore_value: true #If you don't want to store the setting at ESP, set it to false.
  initial_value: "5" #LD1125H Mov/Occ > Clearance Time Here
  min_value: 0.5
  max_value: 20
  step: 0.5

- platform: template
  name: Occupancy (s)
  id: LD1125H_Mov_Time
  icon: "mdi:account-check"
  optimistic: true
  restore_value: true #If you don't want to store the setting at ESP, set it to false.
  initial_value: "1" #LD1125H Mov > Occ Time Here
  min_value: 0.5
  max_value: 10
  step: 0.5